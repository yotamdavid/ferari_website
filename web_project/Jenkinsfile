pipeline {
    agent any
    
    triggers {
        pollSCM('*/1 * * * *')
    }

    stages {
        stage('Cleanup') {
            steps {
                sh 'echo "Performing cleanup..."'
                sh 'rm -rf ferari_website'
            }
        }

        
        stage('Build Image') {
            steps {
                script {
                sh 'docker login -u yotamdavid -p yotyot0202'
                sh 'git clone https://github.com/yotamdavid/ferari_website.git'
                dir('ferari_website/web_project') {
                    sh 'docker build -t yotamdavid/ferari_website:1.0 .'
                }
                }
            }
        }
        
        stage('Run Container and test') {
            steps {
                script {
                    def containerId = sh(returnStdout: true, script: 'docker run -it -p 5000:5000 -d yotamdavid/ferari_website:1.0').trim()
                    sh "docker exec $containerId bash test.sh"
                    sh "docker stop $containerId"
                }
            }
        }

        
        stage('Deploy to Production') {
            steps {
                script {
                    sh 'docker push yotamdavid/ferari_website:1.0'
                }
            }
        }
        
        stage('Upload to ec2-prod') {
            steps {
                script {
                    withCredentials([
                        sshUserPrivateKey(credentialsId: 'ec2-prod', keyFileVariable: 'SSH_KEY', passphraseVariable: '', usernameVariable: 'SSH_USER')
                    ]) {
                        sh """
                        echo "upload..."
                        ssh -i $SSH_KEY -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $SSH_USER@34.207.165.182 "sudo yum install git -y"
                        echo "running.."
                        rm -rf ansible
                        git clone https://github.com/yotamdavid/ansible.git
                        cd home/ec2-user/ansible/ansible && sudo ansible-playbook -i inventory.ini my_playbook.yml
                        """
                    }
                }
            }
        }
    }
}

